GET SQL_COMMANDS:
FISHCOUNTER_TABLE:
select * from FISHCOUNTER_TABLE order by IDENTCOUNTER desc
FISHDESC_TABLE:
select * from FISHDESC_TABLE order by IDENTFISH desc
GPS_TABLE:
select * from GPS_TABLE order by IDENT desc
TEMPERATURE_TABLE:
select * from TEMPERATURE_TABLE order by IDENT desc
INSPECTOR_REPORT:
select * from INSPECTOR_REPORT order by INSPECTION_ID desc

POST SQL_COMMANDS:

FISHCOUNTER_TABLE:
BEGIN

INSERT INTO FISHCOUNTER_TABLE (IDENTCOUNTER, FISHCOUNTERID, CONTAINERID, FISHCOUNTERSIZE)
VALUES (COUNTIDENT_INCR.nextval, FISHID_INCR.nextval,:containerId, :fishCounterSize);

END;

FISHDESC_TABLE:
BEGIN

INSERT INTO FISHDESC_TABLE (IDENTFISH, FISHID, FISHSIZE, LOCALEXPORT, FISHWEIGHT)
VALUES (IDENTFISH_INCR.nextval, FISHID_INCR.nextval, :fishSize, :LocalExport, :fishWeight );

END;

GPS_TABLE:
BEGIN

INSERT INTO GPS_TABLE (IDENT, GPSID,LONGITUDE, LATITUDE, TIMESTAMP,TARGETOBJ,GPSORIGIN)
VALUES (GPSIDENT_INCR.nextval, GPSID_INCR.nextval,:longi, :lati, TO_TIMESTAMP(:TimeStamp, 'YYYY-MM-DD HH24:MI:SS'),:targetOBJ,:gpsOrigin);

END;

TEMPERATURE_TABLE:
BEGIN

INSERT INTO TEMPERATURE_TABLE (IDENT, TEMPID, TEMP, INRANGE, TIMESTAMPTEMP)
VALUES (IDENT_INCR.nextval, TEMPID_INCR.nextval, :temp, :inRange, TO_TIMESTAMP(:timeStamps, 'YYYY-MM-DD HH24:MI:SS'));

END;

INSPECTOR_REPORT:

